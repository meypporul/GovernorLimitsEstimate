@isTest
public class GovernorLimitsEstimate_test {
    
    @testSetup static void testSetup() {
        List<Account> AccountList = new List<Account>();
        for(Integer i = 0; i<98; i++) {
            Account NewAccount = new Account(Name = 'Test' + i);
            AccountList.add(NewAccount);
        }
        Insert AccountList;
    }

    @IsTest static void test_Within_Limits () {
        Test.startTest();
        GovernorLimitsEstimate.StartLimitsTest();
        
        List<Account> actList = [Select Id from Account Limit 94];
        for (Account act: actList) {
            Account TestAct =  [Select Id from Account Limit 1];
         }
        
        GovernorLimitsEstimate.EndLimitsTest();
        Test.stopTest();
		
        boolean WithinLimitsThreshold = GovernorLimitsEstimate.WithinLimitsThreshold();
        
        system.assertEquals(WithinLimitsThreshold , true); //Check if the method retuns true for remining within Limits
        
    }
    
    @isTest static void test_Above_Limits () {
        Test.startTest();
        GovernorLimitsEstimate.StartLimitsTest();
        
        List<Account> actList = [Select Id from Account Limit 95]; //SOQL outside limits 96 SOQL
       
        for (Account act: actList) {
            Account TestAct =  [Select Id from Account Limit 1];
         }

        GovernorLimitsEstimate.EndLimitsTest();
        Test.stopTest();
		
        boolean WithinLimitsThreshold = GovernorLimitsEstimate.WithinLimitsThreshold();
        
        system.assertEquals(WithinLimitsThreshold, false); //Check if the method retuns false for failure to comply wiht Limits
        
    }    
    
}
